/*
 * Quiz API
 *
 * This is a simple server for managing quiz questions
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using IO.Swagger.Attributes;
using IO.Swagger.Models;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using Swashbuckle.AspNetCore.Annotations;
using System;

namespace IO.Swagger.Controllers
{
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class UserController : ControllerBase
    {
        /// <summary>
        /// Login a user
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Login successful</response>
        /// <response code="401">Invalid username or password</response>
        [HttpPost]
        [Route("/v1/users/login")]
        [ValidateModelState]
        [SwaggerOperation("UsersLoginPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse200), description: "Login successful")]
        public virtual IActionResult UsersLoginPost([FromBody] UserInput body)
        {
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse200));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            string exampleJson = null;
            exampleJson = "{\n  \"token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}";

            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<InlineResponse200>(exampleJson)
            : default(InlineResponse200);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create a new user
        /// </summary>
        /// <param name="body"></param>
        /// <response code="201">Successfully created new user</response>
        /// <response code="500">Internal Server Error</response>
        [HttpPost]
        [Route("/v1/users")]
        [ValidateModelState]
        [SwaggerOperation("UsersPost")]
        public virtual IActionResult UsersPost([FromBody] UserInput body)
        {
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201);

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500);

            throw new NotImplementedException();
        }
    }
}
